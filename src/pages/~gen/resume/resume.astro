---
import EmailIcon from "@components/icons/EmailIcon.astro";
import GitHubIcon from "@components/icons/GitHubIcon.astro";
import LinkedInIcon from "@components/icons/LinkedInIcon.astro";
import LocationIcon from "@components/icons/LocationIcon.astro";
import WebIcon from "@components/icons/WebIcon.astro";
import Link from "@components/resume/Link.astro";
import Role from "@components/resume/Role.astro";
import ListInline from "@components/resume/ListInline.astro";
import ListInfo from "@components/resume/ListInfo.astro";
import HighlightProject from "@components/resume/HighlightProject.astro";
import "@styles/site.css";
import { cfg } from "./pdf-config.local";

// Config schema for pdf-config.local.ts:
// const cfg = {
//   name: "Alex Noddings",
//   tag: "Software Engineer",
//   intro: ["Hello there"],
//   meta: {
//     location: "United Kingdom",
//     web: {
//       text: "alexnoddings.com",
//       href: "https://alexnoddings.com/",
//     },
//     email: {
//       text: "me@example.com",
//       href: "mailto:me@example.com",
//     },
//     github: {
//       text: "alexnoddings",
//       href: "https://github.com/alexnoddings",
//     },
//     linkedin: {
//       text: "alexnoddings",
//       href: "https://linkedin.com/in/alexnoddings",
//     },
//   },
//   education: [
//     {
//       establishment: "University",
//       start: "",
//       end: "",
//       desc: "Computer Science",
//     },
//   ],
//   roles: [
//     {
//       titles: [
//         { title: "Now", start: "Then", end: "Now", period: undefined },
//         { title: "Previous", start: "Donkies", end: "Then" },
//       ],
//       company: "Company",
//       details: ["Responsibility #1", "Responsibility #2"],
//     },
//     {
//       titles: [{ title: "First Role", period: "Ages ago" }],
//       company: "Other Company",
//       details: ["Responsibility #1", "Responsibility #2"],
//     },
//   ],
//   summary: {
//     languages: ["C#", "Others"],
//     frameworks: [".NET", "Others"],
//     tools: ["GitHub", "Others"],
//     softskills: ["Leadership", "Management"],
//   },
//   loves: {
//     professional: ["Being professional"],
//     personal: ["Being personal"],
//   },
//   highlights: [
//     {
//       title: "This site",
//       links: [{ title: "github", href: "https://github.com/alexnoddings/alexnoddings.github.io" }],
//       desc: "blahblah",
//     },
//   ],
// };
---

<!doctype html>
<html lang="en">
  <head></head>
  <body class="mx-6 mb-6 mt-8 flex flex-col gap-4 font-body text-pdf-base text-slate">
    <div class="flox-row flex">
      <h1 class="me-auto">{cfg.name}</h1>
      <h2 class="-mt-0.5 me-2 text-slate">//</h2>
      <h2>{cfg.tag}</h2>
    </div>
    <div class="-mt-2 flex flex-row gap-6">
      <div class="w-2/3">
        {
          cfg.intro && (
            <div class="mt-2 pr-11">
              {cfg.intro.map((para) => (
                <p class="my-1">{para}</p>
              ))}
            </div>
          )
        }
      </div>
      <div class="w-1/3 pt-2">
        <ul class="links-list">
          {cfg.meta.location && <Link icon={LocationIcon} text={cfg.meta.location} />}
          {
            cfg.meta.github && (
              <Link icon={GitHubIcon} text={cfg.meta.github.text} href={cfg.meta.github.href} />
            )
          }
          {
            cfg.meta.linkedin && (
              <Link icon={LinkedInIcon} text={cfg.meta.linkedin.text} href={cfg.meta.linkedin.href} />
            )
          }
          {
            cfg.meta.website && (
              <Link icon={WebIcon} text={cfg.meta.website.text} href={cfg.meta.website.href} />
            )
          }
          {cfg.meta.email && <Link icon={EmailIcon} text={cfg.meta.email.text} href={cfg.meta.email.href} />}
        </ul>
      </div>
    </div>
    <div class="flex flex-row gap-6">
      <div class="panel-left w-2/3">
        <h3>Experience</h3>
        {cfg.roles.map((role) => <Role role={role} />)}
      </div>

      <div class="panel-right w-1/3">
        <h3>At a glance</h3>

        <h4>Programming languages</h4>
        <ListInline items={cfg.summary.languages} />

        <h4>Soft skills</h4>
        <ListInfo items={cfg.summary.softskills} />

        <h4>Tools and processes</h4>
        <ListInline items={cfg.summary.tools} />

        <h4>Frameworks and libraries</h4>
        <ListInline items={cfg.summary.frameworks} />

        <h3>What I love</h3>

        <h4>Professionally</h4>
        <ListInfo items={cfg.loves.professional} />

        <h4>Personally</h4>
        <ListInline items={cfg.loves.personal} />

        <h3>Highlight projects</h3>
        {cfg.projects.map((project) => <HighlightProject project={project} />)}

        <h3>Education</h3>
        {
          cfg.education.map((education) => (
            <>
              <h4 class="flex flex-row items-center gap-3">
                <span class="me-auto">{education.establishment}</span>
                <span class="text-pdf-sm font-normal text-slate">
                  {education.start} - {education.end}
                </span>
              </h4>
              <p>{education.desc}</p>
            </>
          ))
        }
      </div>
    </div>
  </body>
</html>

<style>
  /* Base */
  h1 {
    @apply font-header text-pdf-xxl tracking-tight text-amethyst;
  }
  h2 {
    @apply font-header text-pdf-xl tracking-tight text-charcoal;
  }
  h3 {
    @apply mb-2 font-header text-pdf-lg text-amethyst;
  }
  h4 {
    @apply tracking-wide text-charcoal;
  }

  /* Panels */
  .panel-right h3:first-of-type {
    @apply mt-0;
  }
  .panel-right h3 {
    @apply mt-4;
  }
  .panel-right h4 {
    @apply mb-0.5 mt-2 font-bold;
  }

  ul.links-list {
    @apply flex flex-col gap-1.5;
  }
</style>
