---
import { type CollectionEntry, getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import MarkdownContent from "../../components/MarkdownContent.astro";
import Footer from "../../components/Footer.astro";
import JobTitles from "../../components/JobTitles.astro";

export async function getStaticPaths() {
  const positions = await getCollection("resume");
  return positions.map((position) => ({
    params: { slug: position.slug },
    props: position,
  }));
}

type Props = CollectionEntry<"resume">;

const position = Astro.props;
const { Content } = await position.render();

const { titles, sector, techs, skills } = position.data;

const mainTitleStyle = {
  dateClassName: "text-mist font-header text-xl",
  divider: "•",
  dividerClassName: "text-smoke font-header text-xl mx-1",
  titleClassName: "text-mist font-header text-xl",
};

const offTitleStyle = {
  dateClassName: "text-smoke text-lg",
  divider: "·",
  dividerClassName: "text-lg mx-1",
  titleClassName: "text-smoke font-header text-lg",
};
---

<MainLayout>
  <div class="prose pb-6 pt-12 lg:py-20">
    <div class="flex items-center">
      <a
        href="/"
        data-umami-event="home"
        class="text-gradient-r group flex -translate-x-3 from-lavender to-orchid px-3 py-3 text-lg hover:from-orchid hover:to-lavender"
      >
        <div class="-mt-1 mr-2 font-header">←</div>
         Alex Noddings
      </a>
      <span class="mr-5 text-sm">|</span>
      <span class="text-sm">For privacy, exact dates and details aren't provided on my public résumé</span>
    </div>

    <JobTitles titles={titles} mainTitle={mainTitleStyle} offTitle={offTitleStyle} />

    <div class="max-w-prose">
      <div class="flex flex-col gap-1 pt-2 md:flex-row md:gap-3">
        <h3 class="flex-shrink-0 text-mist">Sector:</h3>
        <span class="text-orchid">{sector}</span>
      </div>
      <div class="flex flex-col gap-1 pt-2 md:flex-row md:gap-3">
        <h3 class="flex-shrink-0 text-mist">Technologies:</h3>
        <div class="flex flex-wrap gap-2">
          {
            techs.map((tech) => (
              <span class="rounded-full bg-lavender/10 px-2 py-1 text-xs text-lavender">{tech}</span>
            ))
          }
        </div>
      </div>
      {
        skills && (
          <div class="flex flex-col gap-1 pt-2 md:flex-row md:gap-3">
            <h3 class="flex-shrink-0 text-mist">Skills:</h3>
            <div class="flex flex-wrap gap-2">
              {skills.map((skill) => (
                <span class="rounded-full bg-turquoise/10 px-2 py-1 text-xs text-turquoise">{skill}</span>
              ))}
            </div>
          </div>
        )
      }
      <MarkdownContent class="mt-6">
        <Content />
      </MarkdownContent>
    </div>
  </div>
  <Footer class="mb-12 mt-20" />
</MainLayout>
