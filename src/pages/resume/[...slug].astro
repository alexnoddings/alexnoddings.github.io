---
import { type CollectionEntry, getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import MarkdownContent from "../../components/MarkdownContent.astro";
import Footer from "../../components/Footer.astro";

export async function getStaticPaths() {
  const positions = await getCollection("resume");
  return positions.map((position) => ({
    params: { slug: position.slug },
    props: position,
  }));
}

type Props = CollectionEntry<"resume">;

const position = Astro.props;
const { Content } = await position.render();

const { titles, company, techs, skills } = position.data;
---

<MainLayout>
  <div class="prose pb-6 pt-12 lg:py-20">
    <div class="flex items-center">
      <a
        href="/"
        data-umami-event="home"
        class="text-lg text-gradient-r group flex -translate-x-3 from-lavender to-orchid px-3 py-3 hover:from-orchid hover:to-lavender"
      >
        <div class="-mt-1 mr-2 font-header">←</div>
         Alex Noddings
      </a>
      <span class="mr-5 text-sm">|</span>
      <span class="text-sm">For privacy, exact dates and details aren't provided on my public résumé</span>
    </div>

    <div class="flex flex-row gap-3">
      <div class="jobs">
        {
          titles[0].end 
            ? (<>
              <span class="job-period">
                {titles[0].start}
              </span>
              <span class="job-period">
                — {titles[0].end}
              </span>
            </>)
            : (<>
              <span class="job-span">
                {titles[0].start}
              </span>
            </>)
        }
        <span class="job-divider mb-1">•</span>
        <h1 class="font-header text-xl text-mist job-title mb-1">
          {titles[0].name}
        </h1>
        {
          titles.length > 1 &&
            titles.slice(1).map((title) => (
              <>
                {
                  title.end 
                    ? (<>
                      <span class="job-period">
                        {title.start}
                      </span>
                      <span class="job-period">
                        — {title.end}
                      </span>
                    </>)
                    : (<>
                      <span class="job-span">
                        {title.start}
                      </span>
                    </>)
                }
              </>
              
              <span class="job-divider text-lg">·</span>
              <h2 class="font-header job-title">{title.name}</h2>
            ))
        }
      </div>
      <h1 class="font-header text-xl text-mist mt-0.5">
        @ {company}
      </h1>
    </div>

    <div class="max-w-prose">
      <div class="flex flex-col gap-1 pt-2 md:flex-row md:gap-3">
        <h3 class="flex-shrink-0 text-mist">Technologies:</h3>
        <div class="flex flex-wrap gap-2">
          {
            techs.map((tech) => (
              <span class="rounded-full bg-lavender/10 px-2 py-1 text-xs text-lavender">{tech}</span>
            ))
          }
        </div>
      </div>
      {
        skills && (
          <div class="flex flex-col gap-1 pt-2 md:flex-row md:gap-3">
            <h3 class="flex-shrink-0 text-mist">Skills:</h3>
            <div class="flex flex-wrap gap-2">
              {skills.map((skill) => (
                <span class="rounded-full bg-turquoise/10 px-2 py-1 text-xs text-turquoise">{skill}</span>
              ))}
            </div>
          </div>
        )
      }
      <MarkdownContent class="mt-6">
        <Content />
      </MarkdownContent>
    </div>
  </div>
  <Footer class="mt-20 mb-12" />
</MainLayout>

<style>
  .jobs {
    display: grid;
    grid-template-columns: repeat(4, auto);
    @apply text-lg max-w-max gap-x-1;
  }
  .jobs .job-title {
    height: 32px;
    @apply self-end;
  }
  .jobs .job-divider {
    height: 35px;
    @apply translate-y-1 justify-self-center self-center mx-2;
  }
  .jobs .job-period {
    height: 35px;
    @apply translate-y-1;
  }
  .jobs .job-span {
    height: 35px;
    @apply translate-y-1 col-span-2;
  }
</style>
